/*-----------------------------------------------------------------------------
*  Domain: https://countermail.com
*  
*  Copyright (c) 2014 InterGrid AB. All Rights Reserved.
*  
//----------------------------------------------------------------------------*/
// Globals
//-----------------------------------------------------------------------------
var cmapp		= null
var apploaded	= false;
var pageloaded	= false;
var pagename	= 0;
var loginopen	= false;
var http			= null;
var splitLine	= String.fromCharCode(124); // |
var splitStar	= String.fromCharCode(164); // ï¿½
var resizing	= 0;
var initsize	= new Array(0,0,0,0,0,0,0);
var PGP_signstart_OnePass="ONEPASS:";	
var PGP_signstart="-----BEGIN PGP SIGNED MESSAGE-----";	
var PGP_messtart ="-----BEGIN PGP MESSAGE-----";	
var PGP_messend  ="-----END PGP MESSAGE-----";	
var PGP_signend  ="-----BEGIN PGP SIGNATURE-----";	
var PGP_firsttry = true;
var wraplen		= 85;
var mitmprot	= false;
var TEMPPRIVKEY= "";
var TEMPUBKEY  = "";
var escURL		= null;
var newVersion = false; // Contact version
var chatWindow = new Array();
var chatCnt		= 0;
var shiftBtn	= false;
var ctrlBtn		= false;
var metaBtn		= false;
var rowLinks	= new Array();
var rowSel		= -1;
var callBackCMD= "";
var safeBoxWin = null;
var JavaCheckCnt=0;
//-----------------------------------------------------------------------------
//
// General functions
//
function Loaded(result)
{
	top.apploaded = (result == "") ? true : false;
	if (!top.apploaded) alert(result);
}

function mitmSet(status)
{
	if (status==1) top.mitmprot=true;
	else  top.mitmprot=false;
}


function htmlchars(instr)
{
	var ret="";
	if (instr==null || instr=="") return ret;
	var len=instr.length;
	var pos;
	var chr;
	for (pos=0; pos<len; pos++)
	{
		chr=instr.charAt(pos);
		if (chr=="'") chr="&#039;";
		if (chr=="\"") chr="&quot;";
		if (chr=="<") chr="&lt;";
		if (chr==">") chr="&gt;";
		if (chr=="&") chr="&amp;";
		ret += chr;
	}
	return ret;
}				


function trim(s)
{
	return s.replace( /^\s*/, "" ).replace( /\s*$/, "" );
}

//
// Word wrap text at user specified length
//
function wrap(text,width)
{
	var ret = "";
	if (text==null || text=="") return ret;
	if (width<20) width=85;
	text=text.replace(/\r/g,"")
	var len=text.length;
	var pos;
	var chr;
	var curlen=0;
	var lastspace=0;
	var prevspace=0;
	var insideHREF = false;
	for (pos=0; pos<len; pos++)
	{
		chr=text.charAt(pos);
		if (!insideHREF)
		{	
			if (text.substring(pos,pos+7) == "<a href") insideHREF = true;
			else if (text.substring(pos,pos+4) == "</a>") insideHREF = true;
		}
		else if (text.charAt(pos-1) == ">") insideHREF = false;
		if (!insideHREF)
		{
			if (chr==" ") lastspace=pos;
			curlen++;
		}
		if (chr=="\n" || chr=="\t") lastspace=pos;
		if ((curlen==width || chr=="\n") ) 
		{
			if ((lastspace-prevspace) > 0) 
			{
				ret +=text.substring(prevspace,lastspace)+"\n";
				prevspace=lastspace+1;
			}
			curlen=0;
		}
	}
	if (ret=="") ret=text;
	else 
	{
		ret += text.substring(prevspace,text.length);
	}
	ret=ret.replace(/\n/g, "<br>");
	return ret;
}

function toggle_check(form, name_prefix, mode)
{
	var f = form.length;
   for (var i = 0; i < f; i++) 
	{
		if (form.elements[i].type == 'checkbox' && (name_prefix == '' || form.elements[i].name.substring(0,name_prefix.length) == name_prefix))
		{
			form.elements[i].checked = mode;
      }
   }
}

function ExtractMail(mail)
{
	var ret;
	if (mail==null || mail=="") return "";
	pos = mail.lastIndexOf(" ");
	if (pos>0) ret=mail.substring(pos,mail.length);
	else ret=mail;
	return cleanMail(ret,true);
}

function cleanMail(mail, trim)
{
	var ret = "";
	if (mail==null || mail=="") return ret;
	var len=mail.length;
	var pos;
	var chr;
	var start=0;
	if (trim)
	{
		// right trim;
		for (pos=len-1; pos!=0 ; pos--)
		{
			chr=mail.charAt(pos);
			if (chr==" " || chr=="\t" || chr=="\n"  || chr=="\r") len--;
			else break;
		}
		// left trim
		for (pos=0; pos<len; pos++)
		{
			chr=mail.charAt(pos);
			if (chr==" " || chr=="\t" || chr=="\n"  || chr=="\r") start++;
			else break;
		}
	}
	for (pos=start; pos<len; pos++)
	{
		chr=mail.charAt(pos);
		if (chr=="'" || chr=="\"" || chr=="<"  || chr==">" || chr==",") continue;
		ret += chr;
	}
	return ret;
}


function TopFocus()
{
	top.window.topframe.document.getElementById('tfocus').focus();
}


function SetIcon(iconURL)
{
  var link = document.createElement("link");
  link.type = "image/x-icon";
  link.rel = "shortcut icon";
  link.href = iconURL;
  RemoveIcons();
  top.window.document.getElementsByTagName("head")[0].appendChild(link);
}

function RemoveIcons()
 {
	var links = top.window.document.getElementsByTagName("head")[0].getElementsByTagName("link");
	for (var i=0; i<links.length; i++)
	{
		var link = links[i];
		if (link.type=="image/x-icon" && link.rel=="shortcut icon")
		{
			top.window.document.getElementsByTagName("head")[0].removeChild(link);
			return;
		}
	}
}

function CheckOnlineContacts()
{
	if (top.cmapp == null) return;
	var ret=top.cmapp.CheckOnlineContacts();
	if (ret != null && ret.length > 1) // && ret.indexOf("Error:")<0)
	{
		var onlineContacts = top.window.left.document.getElementById('onlinecontacts');
		if (onlineContacts != null) // found div with PGP encrypted text
		{
			var html = "";
			var contacts=ret.split("!"); 
			for (i=0; i<contacts.length; i++)
			{
				if (contacts[i] != null && contacts[i].length>0)
				{
					var waiting=contacts[i].indexOf(">");
					if (waiting>0)
					{
						contacts[i]=contacts[i].substring(waiting,contacts[i].length);
						//alert(contacts[i]);
					}
					else waiting=0;
					var pos=contacts[i].indexOf("@");
					if (pos>0) name=htmlchars(contacts[i].substring(0,pos));
					else name=htmlchars(contacts[i]);
					html += "<a href='javascript:void(0);' title='Chat with "+name+"@' onclick='";
					if (top.window.left.cmbuild>20141129)
					{
						html += "top.ChatStart(\""+contacts[i]+"\","+waiting+");'>";
					}
					else html += "javascript:alert(\"Our integrated chat client will be available later for premium members.\\nOur XMPP chat-server is open, so you can also chat using an XMPP client.\\nGo to Settings / Chat settings for info.\");'>";
					if (waiting>0) html +="<img src='https://countermail.com/images/waiting_ani.gif' border='0'>";
					html += name+"</a>&nbsp;<a title='Send email to "+name+"@' ";
					html += "href='javascript:void(0);' onclick='top.comp_in_new(\"/src/compose.php?newmessage=1&send_to="+contacts[i]+"&mailbox=INBOX&CMID="+top.window.topframe.sess_id+"\",640,640,\"scrollbars=yes,menubar=no,location=no,resizable=yes,status=no\");'>@&nbsp;</a><br>";
				}
			}
			if (contacts.length > 0) onlineContacts.innerHTML=html;
		}
	}
}

function ResizeLoaded(win,handle)
{
	if (win == 3) // Right frame
	{
		top.TEMPPRIVKEY="";
		top.shiftBtn=false;
		top.ctrlBtn=false;
		top.rowSel = -1;
		top.pagename = win;
		var pgpfrom = top.window.right.document.getElementById('pgpfrom');
		if (pgpfrom != null) // found div with PGP encrypted text
		{
			pgpmess = top.window.right.document.getElementById('pgpmess');
			var pgptext=pgpmess.innerHTML.replace(/<br>/gi,"\n");
			inframe = top.window.right.document.getElementById('message_frame');
			if (inframe != null)
			{
				top.PGP_MessCheck(pgpfrom.innerHTML,pgptext,1,false);
				pgpmess.innerHTML="";
			}
			else
			{
				ShowLoader();
				pgpmess.innerHTML=top.PGP_MessCheck(pgpfrom.innerHTML,pgptext,0,false);
			}
			pgpfrom.innerHTML="";
		}
		
		// HTML frame?
		frameloader = top.window.right.document.getElementById('frameloader');
		if (frameloader != null)
		{
			frameloader.innerHTML="";
			top.setFrameHeight(top.window.right,'message_frame');
		}

		pgpfrom = top.window.right.document.getElementById('pgpfromsign');
		if (pgpfrom != null) // found div with PGP signed text
		{
			pgpmess = top.window.right.document.getElementById('pgpmess');
			if (pgpmess != null)
			{			
				pgpmess.innerHTML=top.PGP_SignCheck(pgpfrom.innerHTML,pgpmess.innerHTML);
				pgpfrom.innerHTML="";
			}
		}
		HideLoader();

		// Left loaded ?
		var leftWin=""+top.window.left.location.href;
		if (leftWin.indexOf("blank.php")>0 && top.window.topframe.skinDone==1) top.DURL('left_main.php','left');
		
		// Special page?
		if (top.window.right.document.getElementById("contactlist")!=null)
		{
			top.BuildContactList();
			top.window.right.document.getElementById("searchcon").focus();
		}
	}
	else if (win == 0) // Left frame
	{
		if (top.window.topframe != null && top.window.topframe.company != null) company=""+top.window.topframe.company;
		else company="CounterMail";
		for (i=0; i<12; i++) // twelve events should be enough!
		{
			divID=top.window.left.document.getElementById("nextevent"+i);
			if (divID == null || divID.innerHTML == null) break;
			divID.innerHTML=top.PGPProcess(false,true,false,divID.innerHTML);
		}
		if (top.window.topframe.skinDone==0) top.window.left.SetSkin();
		if (top.window.left.topUnread != null)
		{
			parent.document.title = company+"-"+top.window.left.topUnread;
			SetIcon("https://countermail.com/favicon2.ico")
		}
		else 
		{
			parent.document.title = company;
			SetIcon("https://countermail.com/favicon.ico")
		}
		top.wraplen=top.window.left.wraplen;
		window.setTimeout("top.CheckOnlineContacts();",500);
		return;
	}
	else if (win==5) // Edit signature
	{
		return;
	}
	else if (win==6)
	{
		safeBoxWin=handle;
		if (safeBoxWin.document.getElementById("safeboxselect")!=null) safeBoxWin.setTimeout("BuildSafeboxList();",300);
	}
	
	divheight=GetHeight(top.window.right,"innerright");
	initsize[win]=divheight+100;
	ResizeWindow(win,handle);
	top.window.right.onresize=top.Resize;	
}

function Resize()
{
	ResizeWindow(3,parent.window);
}

function ComposeResize()
{
	ResizeWindow(4,top.window.topframe.compWin);
}

function ResizeWindow(win,handle)
{
	if (resizing!=0) return;
	if (initsize[win]==0) return;
	resizing=1;
	var hg=0;
	var wd=0;
	
	if (handle.innerWidth || handle.innerHeight)
	{
		wd = handle.innerWidth;
		hg = handle.innerHeight;
	} else {
		wd = handle.document.documentElement.clientWidth || handle.document.body.clientWidth;
		hg = handle.document.documentElement.clientHeight || handle.document.body.clientHeight;
	}
	if (win==3 && top.window.right.document.getElementById('innerright')!=null)
	{
	
		if (wd<800) wd=800;
		if (hg<455) hg=455;
		oDispHeight=GetHeight(top.window.right,"optionDisplay");
		if (oDispHeight && oDispHeight>hg) hg=(oDispHeight+115);
		if (hg > initsize[win])
		{
			sum=hg-115;
			top.window.right.document.getElementById('innerright').style.height=sum+"px";
		}
	}
	else if (win==4)
	{
		if (wd<400) wd=400;
		if (hg<400) hg=400;
		//divheight=GetHeight(handle,"attachbuttons");
		sum=hg-335;
		handle.document.getElementById('mailbody').style.height=sum+"px";
		sum=hg-55;
		handle.document.getElementById('innerright').style.height=sum+"px";
	}
	else if (win==6)
	{
		if (hg<455) hg=455;
		sum=hg-55;
		safeBoxWin.document.getElementById('innerright').style.height=sum+"px";
	}
	resizing=0;
}

function setFrameHeight(handle,divname)
{
	if (handle.innerWidth || handle.innerHeight)
	{
		hg = handle.innerHeight;
	} else {
		hg = handle.document.documentElement.clientHeight || handle.document.body.clientHeight;
	}
//	hg=GetHeight(wn,divname);
	var d1 = handle.document.getElementById(divname);
	d1.style.height=(hg-240)+"px";
}

function GetHeight(wn,divname)
{
	var d1 = wn.document.getElementById(divname);
	if (!d1) return;
	var ret="";
	var i=0;
	if ( d1.offsetHeight )	ret +=d1.offsetHeight;
	else if ( d1.style.pixelHeight )	ret +=d1.style.pixelHeight;
	else if ( wn.document.defaultView.getComputedStyle)	ret +=wn.document.defaultView.getComputedStyle(d1,'') .height;
	else return 0;
	i=ret.indexOf("px");
	if (i>0) ret=ret.substring(0,i);
	return parseInt(ret);
}

//-----------------------------------------------------------------------------
//
// Contact functions
//
function AddContact(form)
{
	if (!IsActive()) return false;
	// Public key will always be checked inside applet
	if (form.email.value=="" && form.publickey.value !="") form.email.value="@.";
	if (!newVersion) ret = top.cmapp.AddContact(form.email.value,form.name.value,form.info.value,form.publickey.value,"");
	else 
	{
		if (form.visible.checked) visible="1";
		else visible="0";
		ret = top.cmapp.AddContact(form.email.value,form.name.value,form.info.value,form.publickey.value,"",
		form.titlename.value,form.company.value,form.homepage.value,form.adr1.value,form.adr2.value,form.zip.value,
		form.city.value,form.state.value,form.country.value,form.phone1.value,form.phone2.value,form.altemail.value,visible,0);
	}
	if (ret!="ok") alert(ret);
	else top.DURL('/src/addressbook.php','right');
}

function SearchKey(field,email)
{
	if (!IsActive()) return false;
	//
	// Search priority: 1. CounterMail  2. LDAP
	//
	ret = top.cmapp.SearchPublicKey(email);
	if (ret==null) alert("Could not find any key! You must ask your friend for his/her public key.");
	else field.value=ret;
}

function UpdateContact(oldmail,form)
{
	if (!IsActive()) return false;
	//
	// User pressed Update button, so update it
	// Public key will always be checked inside applet
	//
	if (!newVersion) ret = top.cmapp.ChangeContact(oldmail,form.email.value,form.name.value,form.info.value,form.publickey.value);
	else 
	{
		if (form.visible.checked) visible="1";
		else visible="0";
		ret = top.cmapp.ChangeContact(oldmail,form.email.value,form.name.value,form.info.value,form.publickey.value,
		form.titlename.value,form.company.value,form.homepage.value,form.adr1.value,form.adr2.value,form.zip.value,
		form.city.value,form.state.value,form.country.value,form.phone1.value,form.phone2.value,form.altemail.value,visible,0);
	}
												
	if (ret!="ok") alert(ret);
	else top.DURL('/src/addressbook.php','right');

	return;
}

//
// Edit contact
//
function EditContact(currmail,form)
{
	if (!IsActive()) return false;
	form.email.value=currmail;
	var conArray=top.cmapp.GetAllContacts();
	if (conArray==null || conArray.length<4) return false;
	if (conArray.indexOf("2!")==0) // new contact version?
	{
		newVersion=true;
		startPos=2;
	}
	conArray=conArray.substring(startPos,conArray.length-1);
	var contacts=conArray.split(splitStar); 
	for (i=0; i<contacts.length; i++)
	{
		var conFields=contacts[i].split(splitLine);
		if (conFields[0] == currmail)	break;
	}
	if (i==contacts.length) return false;
	var unixtime=parseInt(conFields[4]);
	var newDate = new Date( );
	newDate.setTime( unixtime);
	var dateString = newDate.toLocaleString();
	top.window.right.document.getElementById('lastmod').innerHTML=dateString;
	if (conFields[3]=="Yes")
	{
		form.publickey.value=top.cmapp.SearchPublicKey(currmail);
	}
	else form.publickey.value="";
	form.name.value=conFields[1];
	form.info.value=conFields[2];

	if (newVersion)
	{
		form.titlename.value=conFields[5];
		form.company.value=conFields[6];
		homepage=trim(conFields[7]);
		form.homepage.value=homepage;
		if (homepage.length>0)
		{
			if (homepage.indexOf("http")!=0) homepage ="http://"+homepage;
			link="https://countermail.com/src/redirto.php?url="+top.AES_Encrypt(homepage)+"&CMID="+top.window.topframe.sess_id;
			top.window.right.document.getElementById('homepagelink').innerHTML="<a target='_blank' style='font-weight: bold; text-decoration: underline;' href='"+link+"'>Visit</a>";
		}
		form.adr1.value=conFields[8];
		form.adr2.value=conFields[9];
		form.zip.value=conFields[10];
		form.city.value=conFields[11];
		form.state.value=conFields[12];
		form.country.value=conFields[13];
		form.phone1.value=conFields[14];
		form.phone2.value=conFields[15];
		form.altemail.value=conFields[16];
		if (conFields[17]=="1") form.visible.checked=true;
		else form.visible.checked=false;
	}
	//
	// Change [Add Contact] button name + onclick action
	//
	form.addaddr.value="Save";
	form.addaddr.onclick=new Function("top.UpdateContact('"+currmail+"',this.form);");
}

function ClearFields(form)
{
	var f = form.length;
	var i = 0;
	while (i < f)
	{
		if (form.elements[i].type == "text" || form.elements[i].type == "textarea" || form.elements[i].type == "password")
		{
			form.elements[i].value="";
		}
		i++;
	}
}

function ExportKeys(form)
{
	if (!IsActive()) return false;
	var f = form.length;
	var i = 0;
	var out="";
	
	while (i < f)
	{
		if (form.elements[i].type == "checkbox" && form.elements[i].checked)
		{
			if (form.elements[i+1].type == "hidden")	out += "\n"+form.elements[i+1].value;
		}
		i++;
	}
	if (out=="") 
	{
		alert("You must first select the contact(s) you want to export. Click the checkbox on the contact(s) you want to export.");
		return false;
	}
	form.submit();
}


function RemoveContacts(form)
{
	if (!IsActive()) return false;
	var f = form.length;
	var i = 0;
	var out="";
	//
	// Build confirm Window	info
	//
	while (i < f)
	{
		if (form.elements[i].type == "checkbox" && form.elements[i].checked)
		{
			if (form.elements[i+1].type == "hidden")	out += "\n"+form.elements[i+1].value;
		}
		i++;
	}
	if (out=="") 
	{
		alert("You must first select the contact(s) you want to remove. Click the checkbox on the contact(s) you want to remove.");
	}
	var answer=confirm("Are you sure that you want to delete the following contact(s)? \n"+out);
	if (!answer) return;
	//
	// Delete them!
	//
	i=0;
	while (i < f)
	{
		if (form.elements[i].type == "checkbox" && form.elements[i].checked)
		{
			if (form.elements[i+1].type == "hidden") top.cmapp.RemoveContact(form.elements[i+1].value);
		}
		i++;
	}
	top.DURL('/src/addressbook.php','right');
}

//
// Get Info for all Contacts from Applet
//
function BuildContactList()
{
	if (!IsActive()) return false;
	var startPos=0;
	var conArray=top.cmapp.GetAllContacts();
	if (conArray==null || conArray.length<4) return "";
	if (conArray.indexOf("2!")==0) // new contact version?
	{
		newVersion=true;
		startPos=2;
	}
	conArray=conArray.substring(startPos,conArray.length-1);
	var contacts=conArray.split(splitStar); 
	contacts.sort();
	var table="<table style='table-layout: fixed;' cellspacing='0'><tr>";
	table +='<tr>';
	table +='<td class="colHeader" style="width:1%"><input type="checkbox" name="toggleAll" id="toggleAll" title="Toggle All" onclick="toggle_all(\'address_book_form\', \'sel\', false); return false;" /></td>';
	table +='<td class="colHeader" >Name</td>';
	table +='<td class="colHeader" >Email</td>';
	table +='<td class="colHeader" >PublicKey</td>';
	if (newVersion) table +='<td class="colHeader" >Trust</td>';
	table +='<td class="colHeader" width="100">Last modified</td>';
	table +='<td class="colHeader" >Other Info</td></tr>';
	for (i=0; i<contacts.length; i++)
	{
		var conFields=contacts[i].split(splitLine);
		var onclick="top.window.right.document.forms[1].sel"+i+".checked=!top.window.right.document.forms[1].sel"+i+".checked;top.EditContact('"+conFields[0]+"',top.window.right.document.forms[0]);";
		table +="<tr id='rowid"+i+"' class='abookField'>\n<td  width='20'><input type='checkbox' name='sel"+i+"'><input type='hidden' name='nsel"+i+"' value='"+conFields[0]+"'></td>\n";
		onclick="top.EditContact('"+conFields[0]+"',top.window.right.document.forms[0]);";		
		table +="<td width='200' onclick=\""+onclick+"\">"+conFields[1]+"</td><td width='200' onclick=\""+onclick+"\">"+conFields[0]+"</td>";
		table +="<td width='30' onclick=\""+onclick+"\">"+conFields[3]+"</td>";
		if (newVersion)
		{
			if (conFields[17]=="1") conFields[17]="Yes";
			else conFields[17]="No"; 
			table +="<td width='30' onclick=\""+onclick+"\">"+conFields[17]+"</td>";
		}
		var unixtime=parseInt(conFields[4]);
		var newDate = new Date( );
		newDate.setTime( unixtime);
		var dateString = newDate.toLocaleString();
		table +="<td onclick=\""+onclick+"\">"+dateString+"</td>\n";
		table +="<td style='overflow:hidden; word-wrap:break-word;' onclick=\""+onclick+"\">"+conFields[2]+"</td>\n";
		table +="</tr>\n";
	}
	table +="</table>";
	var contactId=top.window.right.document.getElementById("contactlist");
	if (contactId!=null) contactId.innerHTML=table;
	return;
}



function ViewInfo(instr)
{
	var Fields=instr.split(splitLine);
	var imap  = ""+Fields[0];
	var prkey = ""+Fields[1].replace(/<br>/g,"\n");
//	var prkey = ""+Fields[1].replace(/\s\s/g,"\n");
	if (prkey.indexOf("Path: ")>=0)
	{	
		pos = prkey.indexOf("<br>");
		top.TEMPPRIVKEY=prkey.substring(pos+4);
		prkey=prkey.substring(0,pos);
	}
	else top.TEMPPRIVKEY=prkey;
	top.TEMPPUBKEY=top.window.right.document.getElementById("mypubkey").value+"\n";	
	var strout= "<br><input type='button' id='cmbuttonm' value='Save IMAP-key' onclick='top.cmapp.SaveTextAsFile(\"imapkey.asc\",\""+imap+"\");'><br><b>IMAP-key:</b><br><pre>"+imap+"</pre><br><input type='button' id='cmbuttonm' value='Save PrivKey' onclick='top.cmapp.SaveTextAsFile(\"privkey.asc\",top.TEMPPRIVKEY);'> <input type='button' id='cmbuttonm' value='Save both' onclick='top.cmapp.SaveTextAsFile(\"pub_and_privkey.asc\",top.TEMPPUBKEY+top.TEMPPRIVKEY);'><br><b>Encrypted Private key:</b><br><pre>"+prkey+"</pre>";
	top.window.right.document.getElementById("protinfo").innerHTML=strout;
	top.Resize();
	prkey = "";
	imap  = "";
}

/*
----- CHAT Functions --------------------------------------- 
*/
function ChatStart(email, wait)
{
	var retID = top.cmapp.ChatStart(email,wait);
	if (retID.indexOf("Error:")==0) alert(ret);
	else 
	{
		chat_url="/src/chat.php?chatid="+retID+"&CMID="+top.window.topframe.sess_id;
		chat_arg="width=700,height=700,scrollbars=yes,menubar=no,location=no,resizable=yes,status=no";
		if (mitmprot) top.cmapp.DURL_WIN(chat_url, 'right',chat_arg);
		else window.open(chat_url, "_blank", chat_arg);
	}
}

function ChatMessage(id,event,win)
{
	if (event != null)
	{
		var keyevent = event.which;
		if (keyevent == undefined) keyevent = event.keyCode;
		if (keyevent != 13) return;
	}
	var chattext= win.document.getElementsByTagName('chattext');
	var chatbox	= win.document.getElementsByTagName('chatbox');
	var ret = top.cmapp.ChatMessage(id,chattext.value);
	if (ret.indexOf("Error:")==0) alert(ret);
	else
	{
		chatbox.innerHTML = chattext.value + chatbox.innerHTML;
		chattext.value="";
	}
}

function ChatClose(id)
{
	top.cmapp.ChatClose(id);
}
/* ------------------------------------------------------ */

function PGP_MessCheck (from,mess,type,base64)
{
	if (!IsActive()) return false;
	var plain = "";
	var signInfo = top.window.right.document.getElementById('signatureinfo');
	var encInfo  = top.window.right.document.getElementById('encryptinfo');
	
	if (type==1) // HTML
	{
		pos=mess.indexOf(PGP_messtart);
		end=mess.indexOf(PGP_messend);
		if (pos!=-1) plain=mess.substring(pos,end+PGP_messend.length);
		else plain=mess;
		plain = trim(top.cmapp.PGP_Process(false, false, false, base64,plain,top.wraplen,type));
		plain = mess.substring(0,pos)+plain+mess.substring(end+PGP_messend.length,mess.length);
	}
	else plain = trim(top.cmapp.PGP_Process(false, false, true, base64,mess,top.wraplen,type));
	if (plain.indexOf(PGP_messtart)==0)	return PGP_MessCheck (from,plain,type,false);
	if (plain.indexOf("PGPPBE")==0)
	{
		top.callBackCMD="";
		encInfo.innerHTML="<span class='sigok'>Password encrypted</span>";
		top.cmapp.PBE_Verify(mess);
		return "<pre>"+mess+"</pre>";
	}
	
	var mail = ExtractMail(from);
	top.cmapp.SearchPublicKey(mail);
	if (plain.indexOf(PGP_signstart_OnePass)==0) 
	{
		top.PGP_firsttry = true;
		// get the SHA1 sum
		hash=plain.substring(PGP_signstart_OnePass.length,PGP_signstart_OnePass.length+40);
		plain=plain.substring(PGP_signstart_OnePass.length+41);
		// Compare with ciphertext hash
		if (top.cmapp.HashIt("SHA1",trim(mess))!=hash) signInfo.innerHTML="<span class='sigfailed'>WRONG!</span>";
		else signInfo.innerHTML="<span class='sigok'>Signed message</span>";
		plain = removePGPHeaders(plain);
	}
	if (plain.substring(0,45).indexOf("Signature verification failed.")>=0)
	{
		top.PGP_firsttry = true;
		plain=plain.replace("Signature verification failed.","<span class='sigfailed'>Signature verification failed!</span>");
		signInfo.innerHTML="<span class='sigfailed'>WRONG</span>";
	}
	else if (plain.indexOf(PGP_signstart)==0)
	{
		top.PGP_firsttry = true;
		signInfo.innerHTML="<span class='sigok'>Signed message</span>";
		plain = removePGPHeaders(plain);
	}
	else if (plain.indexOf("onePass key not found.")>=0 && top.PGP_firsttry==true)
	{
		top.PGP_firsttry = false;
		var keyid=trim(plain.substring(26,16));
		ret = top.cmapp.SearchKeyId(keyid);
		if (ret != null) return PGP_MessCheck (from,mess,type,base64);
		else plain=plain.replace("onePass key not found.","<span class='sigfailed'>Signature verification failed! Public key not found.</span> ");
	}

	if (trim(mess).indexOf(PGP_messtart)==0) 
	{
		if (mess.indexOf("Version: CounterMailEngine v1.1")>0) encInfo.innerHTML="<span class='sigok'>Server encrypted</span>";
		else encInfo.innerHTML="<span class='sigok'>Encrypted</span>";
	}
	else encInfo.innerHTML="<span class='sigfailed'>not encrypted</span>";
	if (type==1) // HTML
	{
		var ifrm = top.window.right.document.getElementById('message_frame');
      ifrm = (ifrm.contentWindow) ? ifrm.contentWindow : (ifrm.contentDocument.document) ? ifrm.contentDocument.document : ifrm.contentDocument;
      ifrm.document.open();
      ifrm.document.write(plain);
      ifrm.document.close();
	}
	else return "<pre>"+plain+"</pre>";
}

function PGP_SignCheck(from,mess)
{
	if (!IsActive()) return false;
	var mail = ExtractMail(from);
	top.PGP_firsttry = true;
	if (top.cmapp.GetContactKey(mail)!="Yes")
	{
		ret = top.cmapp.SearchPublicKey(mail);
		if (ret==null) return "<span class='sigfailed'>Could not verify signature because no key available! You must ask your friend for his/her public key.</span><br><pre>"+htmlchars(mess)+"</pre>";
	}
	var signInfo = top.window.right.document.getElementById('signatureinfo');
	var plain = top.cmapp.PGP_Sign(false, true,true,mess,top.wraplen);
	if (plain.substring(0,2)!="ok")	plain = top.cmapp.PGP_Sign(false, true,false,mess,top.wraplen);
	if (plain.substring(0,2)!="ok")
	{
		if (plain.substring(0,45).indexOf("Signature verification failed.")>=0)
		{
			signInfo.innerHTML="<span class='sigfailed'>WRONG</span>";
			plain=plain.replace("Signature verification failed.","<span class='sigfailed'>Signature verification failed!</span>");
		}
		return "<pre>"+plain+"\n"+htmlchars(top.cmapp.base64decode(mess))+"</pre>";
	}
	else 
	{
		signInfo.innerHTML="<span class='sigok'>Signed message</span>";
		return "<pre>"+removePGPHeaders(plain.substring(plain.indexOf("\n\n")+2,plain.length))+"</pre>";
	}
}

function removePGPHeaders(instr)
{
	var lines=instr.replace(/\r/g,"").split("\n");
	var ret="";
	var headfound = false;
	var headend = false;
	var i=0;
	if (lines.length ==0) return instr;
	while (i<lines.length)
	{
		if (!headfound && trim(lines[i])==PGP_signstart) headfound = true;
		else if (headfound && !headend && trim(lines[i])!="") { headend=true; i++; }
		else if (headfound && trim(lines[i])==PGP_signend) break;
		else 
		{
			if (lines[i].substring(0,3)=="- -") lines[i]=lines[i].substring(2,lines[i].length);
			ret += lines[i]+"\n";
		}
		i++;
	}
	return ret;
}

function GetFileAndVerify( fname, url, viewIt, sigurl )
{
	if (!IsActive()) return false;
	if (typeof top.cmapp.PGP_GetFileAndVerify != "undefined") top.cmapp.PGP_GetFileAndVerify(url,fname,viewIt,sigurl);
	else GetFile(fname, url, viewIt);
}


function GetFile( fname, url, viewIt )
{
	if (!IsActive()) return false;
	top.cmapp.PGP_GetFile(url,fname,viewIt);
}

function GetFileResult(result)
{
	if (result!="") alert(result);
}

function checkEncoding(instr)
{
	var lines=instr.replace(/\r/g,"").split("\n");
	var utf8=false;
	var headfound = false;
	var i=0;
	if (lines.length ==0) return utf8;
	while (i<lines.length)
	{
		if (!headfound && trim(lines[i])==PGP_signend) headfound = true;
		else if (headfound && trim(lines[i])=="") break;
		else if (headfound && trim(lines[i])=="Charset: UTF8") utf8=true;
		i++;
	}
	return utf8;
}


function IsActive()
{
	if (!top.apploaded)
	{
		alert("Applet is not loaded yet. Please wait.");
		return false;
	}
	if (top.cmapp==null)
	{
		if (top.window.topframe != null && top.window.topframe.document.applets[0].GetStatus != "undefined") //
		{
			top.cmapp=top.window.topframe.document.applets[0];	
		}
		else
		{
			alert("Your session has expired! You must login again.");
			if ( top.window.topframe == null) top.window.location="http://countermail.com/webmail.php";
			else top.window.topframe.SetApplet();
			return false;		
		}
	}
	return true;
}

function getApp()
{
	return top.window.topframe.document.applets[0];
}

function LoginUser()
{
	return top.window.topframe.document.applets[0].LoginUser();
}


function CheckReason()
{
	//top.cmapp=top.window.topframe.document.applets[0]();
	var reason=""+top.window.location.href;
	if  (reason.indexOf("?r=t")>0 || reason.indexOf("?r=s")>0) 
	{
		 // we dont want any popup window when timeout/invalid session occured
		if (reason.indexOf("r=s")>0) reason="an invalid session, this could occur if someone else used the same session in another browser or computer!";
		else reason="inactivity";
		if (top.window.right.document.getElementById("logintext")!=null)
		{
			out="";
			if (top.cmapp!=null && typeof top.cmapp.GetStatus != "undefined") top.cmapp.Logout();
			out='You have been automatically logged out due to '+reason+'. You can click on this button if you want to login again:';
			out +='<br><br><div align="left"><input type="button" id="cmbutton2" onclick=\'top.window.location.href="https://countermail.com/webmail.php";\' value=" Login " /></div>';		
			top.window.right.document.getElementById("logintext").innerHTML=out;
			if (top.cmapp!=null && typeof top.cmapp.GetStatus != "undefined") top.cmapp.Logout();
		}
	}
	else if ((top.apploaded != null && top.apploaded) && top.cmapp!=null && typeof top.cmapp.GetStatus != "undefined")
	{
		top.JavaCheckCnt=0;
		out  ='If you don\'t see the login window, you can click on this button:';
		out +='<br><br><div align="left"><input type="button" id="cmbutton2" onclick="javascript:top.window.topframe.Login();" value="Login" /></div>';
		top.window.right.document.getElementById("logintext").innerHTML=out;
	}
}
//
//-----------------------------------------------------------------------------
// Window functions
//-----------------------------------------------------------------------------
//
function detectSpecKeys(e)
{
	var keyevent=window.event ? event : e;
	if (keyevent==null) return;
	if (!keyevent.shiftKey)	top.shiftBtn=false;
	else top.shiftBtn=true;
	if (!keyevent.ctrlKey)	top.ctrlBtn	=false;
	else top.ctrlBtn	= true;
	if (!keyevent.metaKey)	top.metaBtn	=false;
	else top.metaBtn = true;
}


function keyPressUpHandler(e)
{
	detectSpecKeys(e);
}

function keyPressHandler(e)
{
	detectSpecKeys(e);
	var keyevent = e.which;
   if (keyevent == undefined) keyevent = e.keyCode;
	//33=pageup 34=pagedown 36=home 35=end  40=arrow down 38=arrow up
	
	var isSearchField = false;
	if (top.window.right != null)
	{
		var activeObj=top.window.right.document.activeElement;
		if (activeObj.tagName.toLowerCase() == "input" && activeObj.id.toLowerCase() == "sqmtextfield") isSearchField = true;
	}
	
	if (keyevent==27 && top.escURL!=null)
	{
		if (top.cmapp!=null && typeof top.cmapp.GetStatus != "undefined") top.cmapp.Logout();
		top.window.topframe.document.getElementById('topholder').style.visibility="hidden";
		top.window.left.document.getElementById('mainholder').style.visibility="hidden";
		top.window.right.document.getElementById('mainholder').style.visibility="hidden";
		top.window.topframe.document.body.style.backgroundImage='none';
		top.window.left.document.body.style.backgroundImage='none';
		top.window.right.document.body.style.backgroundImage='none';
		top.window.topframe.document.body.style.backgroundColor="#FFF";
		top.window.left.document.body.style.backgroundColor="#FFF";
		top.window.right.document.body.style.backgroundColor="#FFF";
		setTimeout('top.location.href=top.escURL;',50);
		return false;
   }
	else if ((keyevent==8 || keyevent==46) && top.window.right != null && !isSearchField)
	{
		var id = top.window.right.document.getElementById('deletebtn');
		setTimeout('parseDelete()',100);
		if (id != null)
		{
			if (!e) e = window.event;
			e.preventDefault();
			return false;
		}
	}
}

function parseDelete()
{
	var id = top.window.right.document.getElementById('deletebtn');
	var i=0
	var cnt=0;
	var boxObj = top.window.right.document.getElementById("mbx_1_msg"+i);
	while (id != null && boxObj != null && boxObj != undefined)
	{
		if (boxObj.checked) cnt++;
		i++;
		boxObj = top.window.right.document.getElementById("mbx_1_msg"+i);
	}
	if (cnt>0 && confirm("You have selected "+cnt+" message(s) for deletion. Do you want to delete these messages?")==true)	id.click();
}



function rowRun(e,id)
{
	detectSpecKeys(e);
	if (!e) e = window.event;
	if (e!=null)
	{
		var rightclick=false;
		if (e.which) rightclick = (e.which == 3);
		else if (e.button) rightclick = (e.button == 2);
		if (rightclick) return false; 
	}
	if (top.shiftBtn && top.rowSel != -1)
	{
		maxRow = id+1;
		i = top.rowSel+1;
		if (id < top.rowSel)
		{
			i=id;
			maxRow = top.rowSel;
		}
		for (; i < maxRow; i++)
		{
			boxObj = top.window.right.document.getElementById("mbx_1_msg"+i);
			if (boxObj == null) continue;
			rowObj = top.window.right.document.getElementById("rowid"+i);
			rowObj.className = 'selectedrule';
			boxObj.checked = true;
		}
		top.rowSel = id;
		return false;
	}
	if (e == null || top.ctrlBtn || top.metaBtn || (top.shiftBtn && top.rowSel == -1))
	{
		boxObj = top.window.right.document.getElementById("mbx_1_msg"+id);
		rowObj = top.window.right.document.getElementById("rowid"+id);
		if ((e == null && boxObj.checked) || (e != null && !boxObj.checked))
		{
			rowObj.className = 'selectedrule';
			boxObj.checked = true;
		}
		else
		{
			rowObj.className = 'brdrmid2';
			boxObj.checked = false;
		}
		top.rowSel = id;
		return false;
	}
	top.DURL(rowLinks[id],'right',true);
}

function HideLoader()
{
	var loader = top.window.right.document.getElementById('pagetop');
	if (loader != null) loader.style.visibility="hidden";
}

function ShowLoader()
{
	var loader = top.window.right.document.getElementById('pagetop');
	if (loader != null)
	{
		loader.style.zIndex=4;
		loader.style.visibility="visible";
		loader.style.top="150px";
		loader.style.left="270px";
		loader.style.width="150px";
		loader.style.height="60px";
		loader.style.border="2px dashed #5A7B3F";
	}
}


// WRAPPER for Java Load URL
function DURL(url, frame, showLoader)
{
	if (!showLoader) var showLoader = 1
	
	if (!mitmprot && url.indexOf("CMID=")<0)
	{
		if (url.indexOf("?")<0) url=url+"?";
		else url=url+"&";
		url=url+"CMID="+top.window.topframe.sess_id;
	}
	else if (top.apploaded && mitmprot && !IsActive()) top.window.topframe.Signout();
	
	if (frame=="left")
	{	
		if (mitmprot) top.cmapp.DURL(url,frame);
		else top.window.left.location=url;
	}
	else 
	{
		if (showLoader==1) ShowLoader();
		if (mitmprot)
		{
			if (url.indexOf("unreadload=1")>0 && url.indexOf("/src/read_body.php")==0) setTimeout('top.window.left.location.reload();',1000);
			top.cmapp.DURL(url,frame);
		}
		else
		{
			if (url.indexOf("unreadload=1")>0 && url.indexOf("/src/read_body.php")==0) setTimeout('top.window.left.location.reload();',1000);
			if (url.indexOf("https://countermail.com")==-1) url="https://countermail.com"+url;
			setTimeout('top.window.right.location="'+url+'";',100);
		}
	}
}

function writeLeftFrame(outstr)
{
	top.window.left.document.open();
	top.window.left.document.write(outstr);
	top.window.left.document.close();
}

function writeRightFrame(outstr)
{
	top.window.right.document.open();
	top.window.right.document.write(outstr);
	top.window.right.document.close();
}


// Java POST Form
function PURL(url,frame,fstr,fvalues)
{
	if (frame!="left" && frame.indexOf("save:")<0) ShowLoader();
	if (mitmprot) top.cmapp.PURL(url,frame,fstr,fvalues);
}


function History(val)
{
	top.window.right.history.go(val);
}

// Submit form via Applet, POST strings will be AES encrypted inside applet
function submit_form_f(formen, url, frame, button)
{
	ShowLoader();
	if (!mitmprot)
	{
		formen.action=url;
		formen.submit();
		return true;
	}
	var f = formen.length;
	var fstr = "";
	var fvalues ="";
   for (var i = 0; i < f; i++) 
	{
		if (formen.elements[i].type == "checkbox"  && !formen.elements[i].checked) continue;
		if (formen.elements[i].type == "submit" && button!="") continue;
		if (formen.elements[i].type == "button") continue;
		if (formen.elements[i].name == "CMID") continue;
		if (formen.elements[i].name == "") continue;
		fstr += formen.elements[i].name + splitLine;
		fvalues += top.cmapp.base64encode(formen.elements[i].value) + splitLine;
   }
	if (button != "")
	{
		fstr += button + splitLine;
		fvalues += top.cmapp.base64encode(button) + splitLine;
	}
	top.PURL(url,frame,fstr,fvalues);
	return true;
}

// Wrapper for Submit form 
function submit_form(formen, url)
{
	submit_form_f(formen,url,"right","");
}

// Submit form via form button --> onsubmit --> Applet
function submit_button(formen,button)
{
	var submit_str=""+formen.onsubmit; // had to do this!
	submit_str=trim(submit_str);
	var pos=submit_str.indexOf("(this,");
	submit_str=submit_str.substring(pos+7,submit_str.length-5).replace("\"","");
	if (pos>0) submit_form_f(formen,submit_str,"right",button);
}

function AES_Encrypt(instr)
{
	if (instr==null || instr=="") return "";
	return top.cmapp.AES_Encrypt(instr);
}

function AES_Decrypt(instr)
{
	if (instr==null || instr=="") return "";
	return top.cmapp.AES_Decrypt(instr);
}


function FetchMail(form)
{
	if (!IsActive()) return false;
	var users="";
	var passwords="";
	var concResult = "";
	var userarray=form.users.value.split(splitLine); 
	for (i=0; i<userarray.length; i++)
	{
		if (userarray[i].length<16) continue;
		concResult +=top.PGPProcess(false,true,false,userarray[i])+splitLine;
	}
	form.users.value=top.cmapp.AES_Encrypt(concResult);
	
	concResult = "";
	var passarray=form.passwords.value.split(splitLine); 
	for (i=0; i<passarray.length; i++)
	{
		if (passarray[i].length<2) continue;
		concResult +=top.PGPProcess(false,true,false,passarray[i])+splitLine;
	}
	form.passwords.value=top.cmapp.AES_Encrypt(concResult);
	concResult="";
	form.onsubmit();
}

function PGP_PostFile(win,enc,prevAttachments)
{
	top.window.topframe.PGP_PostFile(win,enc,prevAttachments);
}

function PGPProcess(forEncryption, usePass, useForm, field)
{
	if (!IsActive()) return false;
	if (useForm)
	{
		if (field.value.length<1) return "";
		ret = top.cmapp.PGP_Process(forEncryption,usePass,true,true,field.value);
		field.value=ret;
	}
	else 
	{
		if (field.length<1) return "";
		return top.cmapp.PGP_Process(forEncryption,usePass,true,true,field).replace(/\n/g, "<br>");
	}
}

function ActivateUSB()
{
	top.cmapp.CreateKeyfile("ver2",true);
}

function JavaCallback(result)
{
	if (result!=null)
	{
		result=result.replace(/<br>/gi,"\n");
		alert(result);
		if (result=="USB-key was activated!") 	top.DURL('/src/options.php?optpage=personal','right');
	}
}

function DeActivateUSB(keyid)
{
	top.cmapp.RemoveKeyfile(keyid);
	top.DURL('/src/options.php?optpage=personal','right');
}

function comp_in_new(comp_uri, iWidth, iHeight, arguments)
{
	 ShowLoader();
    if (!iWidth) iWidth   =  640;
    if (parseInt(iHeight)<100) iHeight =  640;
    sArg = "width=" + iWidth + ",height=" + iHeight + "," + arguments;
	 if (mitmprot) top.cmapp.DURL_WIN('/'+comp_uri,'right',sArg);
    else top.window.topframe.compWin = window.open(comp_uri , "_blank", sArg);
}

function comp_in_new_form(comp_uri, button, myform, iWidth, iHeight)
{
	 ShowLoader();
    comp_uri += "&" + button.name + "=1";
    for ( var i=0; i < myform.elements.length; i++ ) {
        if ( myform.elements[i].type == "checkbox"  && myform.elements[i].checked )
        comp_uri += "&" + myform.elements[i].name + "=1";
    }
    if (!iWidth) iWidth   =  640;
    if (parseInt(iHeight)<100) iHeight =  640;
    var sArg = "width=" + iWidth + ",height=" + iHeight + ",scrollbars=yes,resizable=yes,status=yes";
	 if (mitmprot) top.cmapp.DURL_WIN('/'+comp_uri,'right',sArg);
	 else top.window.topframe.compWin = window.open(comp_uri , "_blank", sArg);
}

function EmptyTrash()
{
	var answer=confirm("Are you sure that you want to empty the Trash-folder?\n");
	if (!answer) return;
	top.DURL("/src/empty_trash.php", "left", true);
}


function PBE_selected(result)
{
	if (result.indexOf("Error:")==0) alert(result);	
	else if (top.callBackCMD.length>0)
	{
		eval(top.callBackCMD);
	}
	top.callBackCMD="";
}

function PBE_verified(result)
{
	if (result.indexOf("Error:")==0) alert(result);	
	else if (top.callBackCMD.length>0)
	{
		eval(top.callBackCMD);
	}
	top.callBackCMD="";
	if (result.indexOf("PGPPBE")==0)
	{
		pgpmess = top.window.right.document.getElementById('pgpmess');
		pgpmess.innerHTML = "<pre>"+top.cmapp.base64decode(result.substr(6,result.length))+"</pre>"; 
	}
}
